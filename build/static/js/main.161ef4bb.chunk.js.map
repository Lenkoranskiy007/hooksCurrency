{"version":3,"sources":["Currency.tsx","App.tsx","index.tsx"],"names":["Currency","props","type","className","value","amount","onChange","onChangeInput","selectedCurrency","onChangeCurrency","options","map","option","index","App","toAmount","fromAmount","useState","setOptions","oneCurrency","setOneCurrency","twoCurrency","setTwoCurrency","changeRate","setChangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","isLoading","setIsLoading","useEffect","axios","get","then","res","firstCurrency","Object","keys","data","rates","base","CircularProgress","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAWaA,EAAW,SAACC,GACvB,OACE,gCACE,uBAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOH,EAAMI,OAAQC,SAAUL,EAAMM,gBAC5E,wBAAQJ,UAAU,SAASC,MAAOH,EAAMO,iBAAkBF,SAAUL,EAAMQ,iBAA1E,SACGR,EAAMS,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACjB,wBAAoBT,MAAOQ,EAA3B,SACGA,GADUC,Y,uBC8FRC,MA5Ff,WAAgB,IASVC,EAAUC,EATD,EACiBC,mBAAmB,IADpC,mBACNP,EADM,KACGQ,EADH,OAEyBD,qBAFzB,mBAENE,EAFM,KAEOC,EAFP,OAGyBH,qBAHzB,mBAGNI,EAHM,KAGOC,EAHP,OAIuBL,qBAJvB,mBAINM,EAJM,KAIMC,EAJN,OAKeP,mBAAuB,GALtC,mBAKNZ,EALM,KAKEoB,EALF,OAM2CR,oBAAS,GANpD,mBAMNS,EANM,KAMgBC,EANhB,OAOqBV,oBAAS,GAP9B,mBAONW,EAPM,KAOKC,EAPL,KAsDb,OA5CIH,GACFV,EAAaX,EACbU,EAAWQ,GAAclB,EAASkB,IAElCR,EAAWV,EACXW,EAAaO,GAAclB,EAASkB,GAGtCO,qBAAU,WACRD,GAAa,GACbE,IACGC,IAAI,yFACJC,MAEC,SAACC,GACC,IAAMC,EAAgBC,OAAOC,KAAKH,EAAII,KAAKC,OAAO,GAClDrB,EAAW,CAACgB,EAAII,KAAKE,MAAX,mBAAoBJ,OAAOC,KAAKH,EAAII,KAAKC,UACnDnB,EAAec,EAAII,KAAKE,MACxBlB,EAAea,GACfX,EAAcU,EAAII,KAAKC,MAAMJ,IAC7BN,GAAa,QAGlB,IAEHC,qBAAU,WACW,MAAfX,GAAsC,MAAfE,GACzBU,IAAM,8FAAD,OAC2FZ,EAD3F,oBACkHE,IAEpHY,MAAK,SAACC,GAAD,OAASV,EAAcU,EAAII,KAAKC,MAAMlB,SAE/C,CAACF,EAAaE,IAaf,mCACE,qBAAKlB,UAAU,UAAf,SACE,sBAAKA,UAAU,UAAf,UACE,yFACCyB,GAAa,cAACa,EAAA,EAAD,IACd,cAAC,EAAD,CAEE/B,QAASA,EACTF,iBAAkBW,EAClBV,iBAAkB,SAACiC,GAAD,OAAuCtB,EAAesB,EAAEC,OAAOvC,QACjFG,cArBV,SAAyBmC,GACvBjB,EAAUiB,EAAEC,OAAOvC,OACnBuB,GAAwB,IAoBhBtB,OAAQW,IAEV,uBACA,cAAC,EAAD,CAEEN,QAASA,EACTF,iBAAkBa,EAClBZ,iBAAkB,SAACiC,GAAD,OAAuCpB,EAAeoB,EAAEC,OAAOvC,QACjFG,cAzBV,SAAyBmC,GACvBjB,EAAUiB,EAAEC,OAAOvC,OACnBuB,GAAwB,IAwBhBtB,OAAQU,YC1FpB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.161ef4bb.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react';\nimport { ResponseDataType } from './App';\n\ntype CurrencyType = {\n  options: string[];\n  selectedCurrency: string | undefined;\n  onChangeCurrency: (e: ChangeEvent<HTMLSelectElement>) => void;\n  onChangeInput: (e: ChangeEvent<HTMLInputElement>) => void;\n  amount: any;\n};\n\nexport const Currency = (props: CurrencyType) => {\n  return (\n    <div>\n      <input type=\"number\" className=\"input\" value={props.amount} onChange={props.onChangeInput} />\n      <select className=\"select\" value={props.selectedCurrency} onChange={props.onChangeCurrency}>\n        {props.options.map((option, index) => (\n          <option key={index} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Currency } from './Currency';\nimport './index.scss';\nimport Box from '@material-ui/core/Box/Box';\nimport { CircularProgress } from '@material-ui/core';\n\nexport type ResponseDataType = {\n  base: string;\n  disclaimer: string;\n  license: string;\n  rates: {} | any;\n  timestamp: number;\n};\n\ntype ResponseType = {\n  data: ResponseDataType;\n};\n\nfunction App() {\n  const [options, setOptions] = useState<string[]>([]);\n  const [oneCurrency, setOneCurrency] = useState<string>();\n  const [twoCurrency, setTwoCurrency] = useState<string>();\n  const [changeRate, setChangeRate] = useState<number>();\n  const [amount, setAmount] = useState<number | any>(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  let toAmount, fromAmount;\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = changeRate && amount * changeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = changeRate && amount / changeRate;\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios\n      .get('https://openexchangerates.org/api/latest.json?app_id=02a319ef9b3d4607aef242f676e6752e')\n      .then(\n        //@ts-ignore\n        (res: ResponseType) => {\n          const firstCurrency = Object.keys(res.data.rates)[0];\n          setOptions([res.data.base, ...Object.keys(res.data.rates)]);\n          setOneCurrency(res.data.base);\n          setTwoCurrency(firstCurrency);\n          setChangeRate(res.data.rates[firstCurrency]);\n          setIsLoading(false);\n        },\n      );\n  }, []);\n\n  useEffect(() => {\n    if (oneCurrency != null && twoCurrency != null) {\n      axios(\n        `https://openexchangerates.org/api/latest.json?app_id=02a319ef9b3d4607aef242f676e6752e&base=${oneCurrency}&symbols=${twoCurrency}`,\n      ) //@ts-ignore\n        .then((res) => setChangeRate(res.data.rates[twoCurrency]));\n    }\n  }, [oneCurrency, twoCurrency]);\n\n  function handleOneChange(e: ChangeEvent<HTMLInputElement>) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleTwoChange(e: ChangeEvent<HTMLInputElement>) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <div className=\"content\">\n          <h1>Курс валют</h1>\n          {isLoading && <CircularProgress />}\n          <Currency\n            //@ts-ignore\n            options={options}\n            selectedCurrency={oneCurrency}\n            onChangeCurrency={(e: ChangeEvent<HTMLSelectElement>) => setOneCurrency(e.target.value)}\n            onChangeInput={handleOneChange}\n            amount={fromAmount}\n          />\n          <hr />\n          <Currency\n            //@ts-ignore\n            options={options}\n            selectedCurrency={twoCurrency}\n            onChangeCurrency={(e: ChangeEvent<HTMLSelectElement>) => setTwoCurrency(e.target.value)}\n            onChangeInput={handleTwoChange}\n            amount={toAmount}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\n// Компонент Loader\nexport function CircularIndeterminate() {\n  return (\n    <Box className=\"circular\" sx={{ display: 'flex' }}>\n      <CircularProgress />\n    </Box>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}